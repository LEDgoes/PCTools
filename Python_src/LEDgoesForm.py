# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LEDgoes PC Interface.ui'
#
# Created: Sat Feb 21 22:18:57 2015
#      by: PyQt5 UI code generator 5.1.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(621, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("LEDgoes-Icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.gridGroupBox.setGeometry(QtCore.QRect(230, 20, 381, 161))
        self.gridGroupBox.setObjectName("gridGroupBox")
        self.commLayout = QtWidgets.QGridLayout(self.gridGroupBox)
        self.commLayout.setContentsMargins(10, 10, 10, 10)
        self.commLayout.setObjectName("commLayout")
        self.selRow2COM = QtWidgets.QComboBox(self.gridGroupBox)
        self.selRow2COM.setEnabled(False)
        self.selRow2COM.setObjectName("selRow2COM")
        self.commLayout.addWidget(self.selRow2COM, 2, 1, 1, 1)
        self.selRow1COM = QtWidgets.QComboBox(self.gridGroupBox)
        self.selRow1COM.setObjectName("selRow1COM")
        self.commLayout.addWidget(self.selRow1COM, 1, 1, 1, 1)
        self.lblRow2COMPort = QtWidgets.QLabel(self.gridGroupBox)
        self.lblRow2COMPort.setEnabled(False)
        self.lblRow2COMPort.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblRow2COMPort.setObjectName("lblRow2COMPort")
        self.commLayout.addWidget(self.lblRow2COMPort, 2, 0, 1, 1)
        self.lblRow1COMPort = QtWidgets.QLabel(self.gridGroupBox)
        self.lblRow1COMPort.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblRow1COMPort.setObjectName("lblRow1COMPort")
        self.commLayout.addWidget(self.lblRow1COMPort, 1, 0, 1, 1)
        self.selSpeed = QtWidgets.QComboBox(self.gridGroupBox)
        self.selSpeed.setObjectName("selSpeed")
        self.commLayout.addWidget(self.selSpeed, 0, 1, 1, 1)
        self.lblSpeed = QtWidgets.QLabel(self.gridGroupBox)
        self.lblSpeed.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblSpeed.setObjectName("lblSpeed")
        self.commLayout.addWidget(self.lblSpeed, 0, 0, 1, 1)
        self.btnConnectRow1 = QtWidgets.QPushButton(self.gridGroupBox)
        self.btnConnectRow1.setObjectName("btnConnectRow1")
        self.commLayout.addWidget(self.btnConnectRow1, 1, 2, 1, 1)
        self.btnConnectRow2 = QtWidgets.QPushButton(self.gridGroupBox)
        self.btnConnectRow2.setEnabled(False)
        self.btnConnectRow2.setObjectName("btnConnectRow2")
        self.commLayout.addWidget(self.btnConnectRow2, 2, 2, 1, 1)
        self.lblPlaceholder = QtWidgets.QLabel(self.gridGroupBox)
        self.lblPlaceholder.setObjectName("lblPlaceholder")
        self.commLayout.addWidget(self.lblPlaceholder, 3, 0, 1, 1)
        self.btnOpenConsole = QtWidgets.QPushButton(self.gridGroupBox)
        self.btnOpenConsole.setObjectName("btnOpenConsole")
        self.commLayout.addWidget(self.btnOpenConsole, 3, 1, 1, 1)
        self.btnChangeBaudRate = QtWidgets.QPushButton(self.gridGroupBox)
        self.btnChangeBaudRate.setObjectName("btnChangeBaudRate")
        self.commLayout.addWidget(self.btnChangeBaudRate, 0, 2, 1, 1)
        self.commLayout.setColumnStretch(1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 190, 601, 361))
        self.tabWidget.setObjectName("tabWidget")
        self.tabRawText = QtWidgets.QWidget()
        self.tabRawText.setObjectName("tabRawText")
        self.lblRawTextInstrs = QtWidgets.QLabel(self.tabRawText)
        self.lblRawTextInstrs.setGeometry(QtCore.QRect(20, 20, 561, 41))
        self.lblRawTextInstrs.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblRawTextInstrs.setWordWrap(True)
        self.lblRawTextInstrs.setObjectName("lblRawTextInstrs")
        self.txtMessage = QtWidgets.QTextEdit(self.tabRawText)
        self.txtMessage.setGeometry(QtCore.QRect(100, 280, 391, 41))
        self.txtMessage.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtMessage.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtMessage.setTabChangesFocus(True)
        self.txtMessage.setReadOnly(False)
        self.txtMessage.setObjectName("txtMessage")
        self.btnPush = QtWidgets.QPushButton(self.tabRawText)
        self.btnPush.setGeometry(QtCore.QRect(500, 270, 75, 23))
        self.btnPush.setObjectName("btnPush")
        self.btnReplace = QtWidgets.QPushButton(self.tabRawText)
        self.btnReplace.setEnabled(False)
        self.btnReplace.setGeometry(QtCore.QRect(500, 300, 75, 23))
        self.btnReplace.setObjectName("btnReplace")
        self.rawTextList = QtWidgets.QListWidget(self.tabRawText)
        self.rawTextList.setGeometry(QtCore.QRect(20, 90, 561, 161))
        self.rawTextList.setObjectName("rawTextList")
        self.btnDeleteRawText = QtWidgets.QPushButton(self.tabRawText)
        self.btnDeleteRawText.setGeometry(QtCore.QRect(20, 60, 121, 23))
        self.btnDeleteRawText.setObjectName("btnDeleteRawText")
        self.btnInsertRawTextBefore = QtWidgets.QPushButton(self.tabRawText)
        self.btnInsertRawTextBefore.setEnabled(True)
        self.btnInsertRawTextBefore.setGeometry(QtCore.QRect(150, 60, 101, 23))
        self.btnInsertRawTextBefore.setObjectName("btnInsertRawTextBefore")
        self.btnInsertRawTextAfter = QtWidgets.QPushButton(self.tabRawText)
        self.btnInsertRawTextAfter.setEnabled(True)
        self.btnInsertRawTextAfter.setGeometry(QtCore.QRect(260, 60, 101, 23))
        self.btnInsertRawTextAfter.setObjectName("btnInsertRawTextAfter")
        self.fontComboBox = QtWidgets.QFontComboBox(self.tabRawText)
        self.fontComboBox.setEnabled(False)
        self.fontComboBox.setGeometry(QtCore.QRect(100, 260, 171, 22))
        self.fontComboBox.setEditable(True)
        self.fontComboBox.setObjectName("fontComboBox")
        self.btnYellow = QtWidgets.QPushButton(self.tabRawText)
        self.btnYellow.setGeometry(QtCore.QRect(10, 280, 31, 23))
        self.btnYellow.setObjectName("btnYellow")
        self.btnRed = QtWidgets.QPushButton(self.tabRawText)
        self.btnRed.setGeometry(QtCore.QRect(40, 280, 31, 23))
        self.btnRed.setObjectName("btnRed")
        self.btnGreen = QtWidgets.QPushButton(self.tabRawText)
        self.btnGreen.setGeometry(QtCore.QRect(70, 280, 31, 23))
        self.btnGreen.setObjectName("btnGreen")
        self.lblMsgLimit = QtWidgets.QLabel(self.tabRawText)
        self.lblMsgLimit.setGeometry(QtCore.QRect(380, 60, 111, 21))
        self.lblMsgLimit.setObjectName("lblMsgLimit")
        self.spinMsgLimit = QtWidgets.QSpinBox(self.tabRawText)
        self.spinMsgLimit.setGeometry(QtCore.QRect(520, 60, 61, 22))
        self.spinMsgLimit.setMinimum(1)
        self.spinMsgLimit.setMaximum(100)
        self.spinMsgLimit.setProperty("value", 10)
        self.spinMsgLimit.setObjectName("spinMsgLimit")
        self.isSticky = QtWidgets.QCheckBox(self.tabRawText)
        self.isSticky.setGeometry(QtCore.QRect(20, 310, 71, 20))
        self.isSticky.setObjectName("isSticky")
        self.tabWidget.addTab(self.tabRawText, "")
        self.tabTwitter = QtWidgets.QWidget()
        self.tabTwitter.setObjectName("tabTwitter")
        self.btnTwitterStream = QtWidgets.QPushButton(self.tabTwitter)
        self.btnTwitterStream.setGeometry(QtCore.QRect(340, 290, 75, 23))
        self.btnTwitterStream.setObjectName("btnTwitterStream")
        self.lblTwitter = QtWidgets.QLabel(self.tabTwitter)
        self.lblTwitter.setGeometry(QtCore.QRect(20, 250, 561, 41))
        self.lblTwitter.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblTwitter.setWordWrap(True)
        self.lblTwitter.setObjectName("lblTwitter")
        self.txtTwitterSearch = QtWidgets.QTextEdit(self.tabTwitter)
        self.txtTwitterSearch.setGeometry(QtCore.QRect(20, 290, 311, 21))
        self.txtTwitterSearch.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterSearch.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterSearch.setTabChangesFocus(True)
        self.txtTwitterSearch.setObjectName("txtTwitterSearch")
        self.lblTwitterAuth = QtWidgets.QLabel(self.tabTwitter)
        self.lblTwitterAuth.setGeometry(QtCore.QRect(20, 20, 551, 51))
        self.lblTwitterAuth.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblTwitterAuth.setWordWrap(True)
        self.lblTwitterAuth.setObjectName("lblTwitterAuth")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.tabTwitter)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(20, 80, 551, 128))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.lblTwitterConsumerKey = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.lblTwitterConsumerKey.setObjectName("lblTwitterConsumerKey")
        self.gridLayout_3.addWidget(self.lblTwitterConsumerKey, 0, 0, 1, 1)
        self.lblTwitterTokenSecret = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.lblTwitterTokenSecret.setObjectName("lblTwitterTokenSecret")
        self.gridLayout_3.addWidget(self.lblTwitterTokenSecret, 3, 0, 1, 1)
        self.lblTwitterTokenKey = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.lblTwitterTokenKey.setObjectName("lblTwitterTokenKey")
        self.gridLayout_3.addWidget(self.lblTwitterTokenKey, 2, 0, 1, 1)
        self.lblTwitterConsumerSecret = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.lblTwitterConsumerSecret.setObjectName("lblTwitterConsumerSecret")
        self.gridLayout_3.addWidget(self.lblTwitterConsumerSecret, 1, 0, 1, 1)
        self.txtTwitterConsumerKey = QtWidgets.QPlainTextEdit(self.gridLayoutWidget_3)
        self.txtTwitterConsumerKey.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtTwitterConsumerKey.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterConsumerKey.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterConsumerKey.setTabChangesFocus(True)
        self.txtTwitterConsumerKey.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.txtTwitterConsumerKey.setPlainText("")
        self.txtTwitterConsumerKey.setObjectName("txtTwitterConsumerKey")
        self.gridLayout_3.addWidget(self.txtTwitterConsumerKey, 0, 1, 1, 1)
        self.txtTwitterConsumerSecret = QtWidgets.QPlainTextEdit(self.gridLayoutWidget_3)
        self.txtTwitterConsumerSecret.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtTwitterConsumerSecret.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterConsumerSecret.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterConsumerSecret.setTabChangesFocus(True)
        self.txtTwitterConsumerSecret.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.txtTwitterConsumerSecret.setPlainText("")
        self.txtTwitterConsumerSecret.setObjectName("txtTwitterConsumerSecret")
        self.gridLayout_3.addWidget(self.txtTwitterConsumerSecret, 1, 1, 1, 1)
        self.txtTwitterTokenKey = QtWidgets.QPlainTextEdit(self.gridLayoutWidget_3)
        self.txtTwitterTokenKey.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtTwitterTokenKey.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterTokenKey.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterTokenKey.setTabChangesFocus(True)
        self.txtTwitterTokenKey.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.txtTwitterTokenKey.setPlainText("")
        self.txtTwitterTokenKey.setObjectName("txtTwitterTokenKey")
        self.gridLayout_3.addWidget(self.txtTwitterTokenKey, 2, 1, 1, 1)
        self.txtTwitterTokenSecret = QtWidgets.QPlainTextEdit(self.gridLayoutWidget_3)
        self.txtTwitterTokenSecret.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtTwitterTokenSecret.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterTokenSecret.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtTwitterTokenSecret.setTabChangesFocus(True)
        self.txtTwitterTokenSecret.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.txtTwitterTokenSecret.setPlainText("")
        self.txtTwitterTokenSecret.setObjectName("txtTwitterTokenSecret")
        self.gridLayout_3.addWidget(self.txtTwitterTokenSecret, 3, 1, 1, 1)
        self.btnTwitterAuth = QtWidgets.QPushButton(self.tabTwitter)
        self.btnTwitterAuth.setGeometry(QtCore.QRect(170, 210, 121, 23))
        self.btnTwitterAuth.setObjectName("btnTwitterAuth")
        self.tabWidget.addTab(self.tabTwitter, "")
        self.tabAnimation = QtWidgets.QWidget()
        self.tabAnimation.setObjectName("tabAnimation")
        self.lblGIFPath = QtWidgets.QLabel(self.tabAnimation)
        self.lblGIFPath.setEnabled(True)
        self.lblGIFPath.setGeometry(QtCore.QRect(20, 20, 131, 21))
        self.lblGIFPath.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblGIFPath.setObjectName("lblGIFPath")
        self.txtGIFPath = QtWidgets.QTextEdit(self.tabAnimation)
        self.txtGIFPath.setEnabled(True)
        self.txtGIFPath.setGeometry(QtCore.QRect(150, 20, 361, 21))
        self.txtGIFPath.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtGIFPath.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtGIFPath.setTabChangesFocus(True)
        self.txtGIFPath.setObjectName("txtGIFPath")
        self.btnAnim = QtWidgets.QPushButton(self.tabAnimation)
        self.btnAnim.setEnabled(True)
        self.btnAnim.setGeometry(QtCore.QRect(520, 20, 61, 23))
        self.btnAnim.setObjectName("btnAnim")
        self.tabWidget.addTab(self.tabAnimation, "")
        self.tabFirmware = QtWidgets.QWidget()
        self.tabFirmware.setObjectName("tabFirmware")
        self.lblFirmwareDescription = QtWidgets.QLabel(self.tabFirmware)
        self.lblFirmwareDescription.setEnabled(True)
        self.lblFirmwareDescription.setGeometry(QtCore.QRect(20, 20, 561, 16))
        self.lblFirmwareDescription.setObjectName("lblFirmwareDescription")
        self.gridLayoutWidget = QtWidgets.QWidget(self.tabFirmware)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(220, 80, 361, 91))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.lblTargetBoard = QtWidgets.QLabel(self.gridLayoutWidget)
        self.lblTargetBoard.setObjectName("lblTargetBoard")
        self.gridLayout.addWidget(self.lblTargetBoard, 1, 0, 1, 1)
        self.btnAllBoards = QtWidgets.QPushButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnAllBoards.sizePolicy().hasHeightForWidth())
        self.btnAllBoards.setSizePolicy(sizePolicy)
        self.btnAllBoards.setObjectName("btnAllBoards")
        self.gridLayout.addWidget(self.btnAllBoards, 0, 2, 1, 1)
        self.lblSrcBoard = QtWidgets.QLabel(self.gridLayoutWidget)
        self.lblSrcBoard.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblSrcBoard.setObjectName("lblSrcBoard")
        self.gridLayout.addWidget(self.lblSrcBoard, 0, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.btnExecFwOp = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnExecFwOp.setObjectName("btnExecFwOp")
        self.horizontalLayout_3.addWidget(self.btnExecFwOp)
        self.btnEraseSettings = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btnEraseSettings.setObjectName("btnEraseSettings")
        self.horizontalLayout_3.addWidget(self.btnEraseSettings)
        self.gridLayout.addLayout(self.horizontalLayout_3, 2, 1, 1, 1)
        self.txtSrcBoard = QtWidgets.QPlainTextEdit(self.gridLayoutWidget)
        self.txtSrcBoard.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtSrcBoard.setTabChangesFocus(True)
        self.txtSrcBoard.setObjectName("txtSrcBoard")
        self.gridLayout.addWidget(self.txtSrcBoard, 0, 1, 1, 1)
        self.txtTargetBoard = QtWidgets.QPlainTextEdit(self.gridLayoutWidget)
        self.txtTargetBoard.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtTargetBoard.setTabChangesFocus(True)
        self.txtTargetBoard.setObjectName("txtTargetBoard")
        self.gridLayout.addWidget(self.txtTargetBoard, 1, 1, 1, 1)
        self.lblFWU = QtWidgets.QLabel(self.tabFirmware)
        self.lblFWU.setEnabled(False)
        self.lblFWU.setGeometry(QtCore.QRect(10, 190, 491, 16))
        self.lblFWU.setObjectName("lblFWU")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.tabFirmware)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 210, 571, 111))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboBox = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.comboBox.setEnabled(False)
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout.addWidget(self.comboBox)
        self.lblFWUCOMPort = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.lblFWUCOMPort.setEnabled(False)
        self.lblFWUCOMPort.setObjectName("lblFWUCOMPort")
        self.horizontalLayout.addWidget(self.lblFWUCOMPort)
        self.comboBox_2 = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.comboBox_2.setEnabled(False)
        self.comboBox_2.setObjectName("comboBox_2")
        self.horizontalLayout.addWidget(self.comboBox_2)
        self.gridLayout_2.addLayout(self.horizontalLayout, 2, 1, 1, 1)
        self.comboBox_3 = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.comboBox_3.setEnabled(False)
        self.comboBox_3.setEditable(True)
        self.comboBox_3.setObjectName("comboBox_3")
        self.gridLayout_2.addWidget(self.comboBox_3, 0, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_4.setEnabled(False)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 3, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_3.setEnabled(False)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 1, 0, 1, 1)
        self.lblFWUProgrammer = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.lblFWUProgrammer.setEnabled(False)
        self.lblFWUProgrammer.setObjectName("lblFWUProgrammer")
        self.gridLayout_2.addWidget(self.lblFWUProgrammer, 2, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_2.setEnabled(False)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 1)
        self.txtChipIDIncr_2 = QtWidgets.QTextEdit(self.gridLayoutWidget_2)
        self.txtChipIDIncr_2.setEnabled(False)
        self.txtChipIDIncr_2.setMaximumSize(QtCore.QSize(16777215, 24))
        self.txtChipIDIncr_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtChipIDIncr_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.txtChipIDIncr_2.setObjectName("txtChipIDIncr_2")
        self.gridLayout_2.addWidget(self.txtChipIDIncr_2, 1, 1, 1, 1)
        self.btnFindHexFile = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.btnFindHexFile.setEnabled(False)
        self.btnFindHexFile.setObjectName("btnFindHexFile")
        self.gridLayout_2.addWidget(self.btnFindHexFile, 0, 2, 1, 1)
        self.btnFindAvrdude = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.btnFindAvrdude.setEnabled(False)
        self.btnFindAvrdude.setObjectName("btnFindAvrdude")
        self.gridLayout_2.addWidget(self.btnFindAvrdude, 1, 2, 1, 1)
        self.fwOpsList = QtWidgets.QListWidget(self.tabFirmware)
        self.fwOpsList.setGeometry(QtCore.QRect(20, 40, 181, 131))
        self.fwOpsList.setObjectName("fwOpsList")
        self.lblFwOpHelp = QtWidgets.QLabel(self.tabFirmware)
        self.lblFwOpHelp.setGeometry(QtCore.QRect(220, 40, 361, 31))
        self.lblFwOpHelp.setWordWrap(True)
        self.lblFwOpHelp.setObjectName("lblFwOpHelp")
        self.tabWidget.addTab(self.tabFirmware, "")
        self.tabSimulator = QtWidgets.QWidget()
        self.tabSimulator.setObjectName("tabSimulator")
        self.lblComingSoon3 = QtWidgets.QLabel(self.tabSimulator)
        self.lblComingSoon3.setGeometry(QtCore.QRect(30, 30, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lblComingSoon3.setFont(font)
        self.lblComingSoon3.setObjectName("lblComingSoon3")
        self.tabWidget.addTab(self.tabSimulator, "")
        self.tabBaudRate = QtWidgets.QWidget()
        self.tabBaudRate.setObjectName("tabBaudRate")
        self.lblBaudRateInstrs = QtWidgets.QLabel(self.tabBaudRate)
        self.lblBaudRateInstrs.setGeometry(QtCore.QRect(20, 20, 561, 41))
        self.lblBaudRateInstrs.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblBaudRateInstrs.setWordWrap(True)
        self.lblBaudRateInstrs.setObjectName("lblBaudRateInstrs")
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.tabBaudRate)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(80, 70, 464, 86))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.spinBaudRatePanels = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.spinBaudRatePanels.setMinimum(1)
        self.spinBaudRatePanels.setMaximum(64)
        self.spinBaudRatePanels.setProperty("value", 2)
        self.spinBaudRatePanels.setObjectName("spinBaudRatePanels")
        self.gridLayout_4.addWidget(self.spinBaudRatePanels, 0, 1, 1, 1)
        self.lblBaudRateNumPanels = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.lblBaudRateNumPanels.setObjectName("lblBaudRateNumPanels")
        self.gridLayout_4.addWidget(self.lblBaudRateNumPanels, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 1, 2, 1, 1)
        self.lblBaudRateScrollRate = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.lblBaudRateScrollRate.setObjectName("lblBaudRateScrollRate")
        self.gridLayout_4.addWidget(self.lblBaudRateScrollRate, 1, 0, 1, 1)
        self.spinBaudRateScrollRate = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.spinBaudRateScrollRate.setMinimum(1)
        self.spinBaudRateScrollRate.setMaximum(100)
        self.spinBaudRateScrollRate.setProperty("value", 25)
        self.spinBaudRateScrollRate.setObjectName("spinBaudRateScrollRate")
        self.gridLayout_4.addWidget(self.spinBaudRateScrollRate, 1, 1, 1, 1)
        self.lblBaudRateLabel = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.lblBaudRateLabel.setObjectName("lblBaudRateLabel")
        self.gridLayout_4.addWidget(self.lblBaudRateLabel, 2, 0, 1, 1)
        self.lblTargetBaudRate = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.lblTargetBaudRate.setText("")
        self.lblTargetBaudRate.setObjectName("lblTargetBaudRate")
        self.gridLayout_4.addWidget(self.lblTargetBaudRate, 2, 1, 1, 1)
        self.tabWidget.addTab(self.tabBaudRate, "")
        self.groupMarqueeProps = QtWidgets.QGroupBox(self.centralwidget)
        self.groupMarqueeProps.setGeometry(QtCore.QRect(10, 20, 211, 161))
        self.groupMarqueeProps.setObjectName("groupMarqueeProps")
        self.gridLayoutWidget_5 = QtWidgets.QWidget(self.groupMarqueeProps)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(10, 20, 191, 31))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.lblDisplayRows = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.lblDisplayRows.setEnabled(True)
        self.lblDisplayRows.setObjectName("lblDisplayRows")
        self.gridLayout_5.addWidget(self.lblDisplayRows, 0, 0, 1, 1)
        self.spinRows = QtWidgets.QSpinBox(self.gridLayoutWidget_5)
        self.spinRows.setEnabled(True)
        self.spinRows.setMinimum(1)
        self.spinRows.setMaximum(64)
        self.spinRows.setObjectName("spinRows")
        self.gridLayout_5.addWidget(self.spinRows, 0, 1, 1, 1)
        self.chkMultiplexed = QtWidgets.QCheckBox(self.gridLayoutWidget_5)
        self.chkMultiplexed.setEnabled(False)
        self.chkMultiplexed.setObjectName("chkMultiplexed")
        self.gridLayout_5.addWidget(self.chkMultiplexed, 0, 2, 1, 1)
        self.gridLayoutWidget_6 = QtWidgets.QWidget(self.groupMarqueeProps)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(10, 50, 191, 101))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.gridLayoutWidget_6)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.lblPanelsPerRow = QtWidgets.QLabel(self.gridLayoutWidget_6)
        self.lblPanelsPerRow.setObjectName("lblPanelsPerRow")
        self.gridLayout_6.addWidget(self.lblPanelsPerRow, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget_6)
        self.label.setObjectName("label")
        self.gridLayout_6.addWidget(self.label, 4, 0, 1, 1)
        self.spinPanelsPerRow = QtWidgets.QSpinBox(self.gridLayoutWidget_6)
        self.spinPanelsPerRow.setMinimum(1)
        self.spinPanelsPerRow.setMaximum(64)
        self.spinPanelsPerRow.setProperty("value", 2)
        self.spinPanelsPerRow.setObjectName("spinPanelsPerRow")
        self.gridLayout_6.addWidget(self.spinPanelsPerRow, 0, 1, 1, 1)
        self.spinUpdateDelay = QtWidgets.QSpinBox(self.gridLayoutWidget_6)
        self.spinUpdateDelay.setMinimum(1)
        self.spinUpdateDelay.setMaximum(1000)
        self.spinUpdateDelay.setProperty("value", 60)
        self.spinUpdateDelay.setObjectName("spinUpdateDelay")
        self.gridLayout_6.addWidget(self.spinUpdateDelay, 4, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.gridLayoutWidget_6)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.gridLayout_6.addWidget(self.label_6, 3, 0, 1, 1)
        self.btnCustomLayout = QtWidgets.QPushButton(self.gridLayoutWidget_6)
        self.btnCustomLayout.setObjectName("btnCustomLayout")
        self.gridLayout_6.addWidget(self.btnCustomLayout, 2, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 621, 21))
        self.menubar.setObjectName("menubar")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionAbout_LEDgoes_PC_Interface = QtWidgets.QAction(MainWindow)
        self.actionAbout_LEDgoes_PC_Interface.setObjectName("actionAbout_LEDgoes_PC_Interface")
        self.actionUSB_Device_Selection = QtWidgets.QAction(MainWindow)
        self.actionUSB_Device_Selection.setCheckable(True)
        self.actionUSB_Device_Selection.setChecked(False)
        self.actionUSB_Device_Selection.setObjectName("actionUSB_Device_Selection")
        self.actionDumb_Enumeration = QtWidgets.QAction(MainWindow)
        self.actionDumb_Enumeration.setCheckable(True)
        self.actionDumb_Enumeration.setObjectName("actionDumb_Enumeration")
        self.actionRefresh_COM_Ports = QtWidgets.QAction(MainWindow)
        self.actionRefresh_COM_Ports.setObjectName("actionRefresh_COM_Ports")
        self.menuSettings.addAction(self.actionUSB_Device_Selection)
        self.menuSettings.addAction(self.actionDumb_Enumeration)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionRefresh_COM_Ports)
        self.menuHelp.addAction(self.actionAbout_LEDgoes_PC_Interface)
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.spinRows, self.chkMultiplexed)
        MainWindow.setTabOrder(self.chkMultiplexed, self.spinPanelsPerRow)
        MainWindow.setTabOrder(self.spinPanelsPerRow, self.spinUpdateDelay)
        MainWindow.setTabOrder(self.spinUpdateDelay, self.selSpeed)
        MainWindow.setTabOrder(self.selSpeed, self.btnChangeBaudRate)
        MainWindow.setTabOrder(self.btnChangeBaudRate, self.selRow1COM)
        MainWindow.setTabOrder(self.selRow1COM, self.btnConnectRow1)
        MainWindow.setTabOrder(self.btnConnectRow1, self.selRow2COM)
        MainWindow.setTabOrder(self.selRow2COM, self.btnConnectRow2)
        MainWindow.setTabOrder(self.btnConnectRow2, self.btnOpenConsole)
        MainWindow.setTabOrder(self.btnOpenConsole, self.tabWidget)
        MainWindow.setTabOrder(self.tabWidget, self.btnDeleteRawText)
        MainWindow.setTabOrder(self.btnDeleteRawText, self.btnInsertRawTextBefore)
        MainWindow.setTabOrder(self.btnInsertRawTextBefore, self.btnInsertRawTextAfter)
        MainWindow.setTabOrder(self.btnInsertRawTextAfter, self.spinMsgLimit)
        MainWindow.setTabOrder(self.spinMsgLimit, self.rawTextList)
        MainWindow.setTabOrder(self.rawTextList, self.btnYellow)
        MainWindow.setTabOrder(self.btnYellow, self.btnRed)
        MainWindow.setTabOrder(self.btnRed, self.btnGreen)
        MainWindow.setTabOrder(self.btnGreen, self.fontComboBox)
        MainWindow.setTabOrder(self.fontComboBox, self.isSticky)
        MainWindow.setTabOrder(self.isSticky, self.txtMessage)
        MainWindow.setTabOrder(self.txtMessage, self.btnPush)
        MainWindow.setTabOrder(self.btnPush, self.btnReplace)
        MainWindow.setTabOrder(self.btnReplace, self.txtTwitterConsumerKey)
        MainWindow.setTabOrder(self.txtTwitterConsumerKey, self.txtTwitterConsumerSecret)
        MainWindow.setTabOrder(self.txtTwitterConsumerSecret, self.txtTwitterTokenKey)
        MainWindow.setTabOrder(self.txtTwitterTokenKey, self.txtTwitterTokenSecret)
        MainWindow.setTabOrder(self.txtTwitterTokenSecret, self.btnTwitterAuth)
        MainWindow.setTabOrder(self.btnTwitterAuth, self.txtTwitterSearch)
        MainWindow.setTabOrder(self.txtTwitterSearch, self.btnTwitterStream)
        MainWindow.setTabOrder(self.btnTwitterStream, self.txtGIFPath)
        MainWindow.setTabOrder(self.txtGIFPath, self.btnAnim)
        MainWindow.setTabOrder(self.btnAnim, self.fwOpsList)
        MainWindow.setTabOrder(self.fwOpsList, self.txtSrcBoard)
        MainWindow.setTabOrder(self.txtSrcBoard, self.btnAllBoards)
        MainWindow.setTabOrder(self.btnAllBoards, self.txtTargetBoard)
        MainWindow.setTabOrder(self.txtTargetBoard, self.btnExecFwOp)
        MainWindow.setTabOrder(self.btnExecFwOp, self.btnEraseSettings)
        MainWindow.setTabOrder(self.btnEraseSettings, self.comboBox_3)
        MainWindow.setTabOrder(self.comboBox_3, self.btnFindHexFile)
        MainWindow.setTabOrder(self.btnFindHexFile, self.txtChipIDIncr_2)
        MainWindow.setTabOrder(self.txtChipIDIncr_2, self.btnFindAvrdude)
        MainWindow.setTabOrder(self.btnFindAvrdude, self.comboBox)
        MainWindow.setTabOrder(self.comboBox, self.comboBox_2)
        MainWindow.setTabOrder(self.comboBox_2, self.spinBaudRatePanels)
        MainWindow.setTabOrder(self.spinBaudRatePanels, self.spinBaudRateScrollRate)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BriteBlox PC Interface"))
        self.gridGroupBox.setTitle(_translate("MainWindow", "Communication Properties"))
        self.lblRow2COMPort.setText(_translate("MainWindow", "Row 2 COM Port:"))
        self.lblRow1COMPort.setText(_translate("MainWindow", "Row 1 COM Port:"))
        self.lblSpeed.setText(_translate("MainWindow", "Speed (bps):"))
        self.btnConnectRow1.setToolTip(_translate("MainWindow", "<html><head/><body><p>Click this button after you have selected from the dropdown at left the communications port that your marquee is connected to.</p></body></html>"))
        self.btnConnectRow1.setText(_translate("MainWindow", "Connect"))
        self.btnConnectRow2.setText(_translate("MainWindow", "Connect"))
        self.lblPlaceholder.setText(_translate("MainWindow", "Having problems?"))
        self.btnOpenConsole.setText(_translate("MainWindow", "Open the Console"))
        self.btnChangeBaudRate.setToolTip(_translate("MainWindow", "You don\'t need to click this until you have already opened the serial connection."))
        self.btnChangeBaudRate.setText(_translate("MainWindow", "Change"))
        self.lblRawTextInstrs.setText(_translate("MainWindow", "Enter a message in the box at the bottom, then hit Push.  It will appear in the list below, and on the LED matrix after the current cycle has completed."))
        self.txtMessage.setToolTip(_translate("MainWindow", "<html><head/><body><p>Composition box</p></body></html>"))
        self.txtMessage.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt; color:#808000;\"><br /></p></body></html>"))
        self.btnPush.setToolTip(_translate("MainWindow", "<html><head/><body><p>Adds the message in the composition box to the end of the message queue.</p></body></html>"))
        self.btnPush.setText(_translate("MainWindow", "Push"))
        self.btnReplace.setText(_translate("MainWindow", "Replace"))
        self.btnDeleteRawText.setToolTip(_translate("MainWindow", "<html><head/><body><p>Deletes the message selected in the listbox below.</p></body></html>"))
        self.btnDeleteRawText.setText(_translate("MainWindow", "Delete Selected"))
        self.btnInsertRawTextBefore.setToolTip(_translate("MainWindow", "<html><head/><body><p>Inserts a message before the message selected in the list box below.</p></body></html>"))
        self.btnInsertRawTextBefore.setText(_translate("MainWindow", "Insert Before"))
        self.btnInsertRawTextAfter.setToolTip(_translate("MainWindow", "<html><head/><body><p>Inserts a message after the message selected in the list box below.</p></body></html>"))
        self.btnInsertRawTextAfter.setText(_translate("MainWindow", "Insert After"))
        self.btnYellow.setToolTip(_translate("MainWindow", "<html><head/><body><p>Yellow</p></body></html>"))
        self.btnYellow.setText(_translate("MainWindow", "Y"))
        self.btnRed.setToolTip(_translate("MainWindow", "<html><head/><body><p>Red</p></body></html>"))
        self.btnRed.setText(_translate("MainWindow", "R"))
        self.btnGreen.setToolTip(_translate("MainWindow", "<html><head/><body><p>Green</p></body></html>"))
        self.btnGreen.setText(_translate("MainWindow", "G"))
        self.lblMsgLimit.setText(_translate("MainWindow", "Message Limit:"))
        self.spinMsgLimit.setToolTip(_translate("MainWindow", "<html><head/><body><p>This value should be set to a low enough number to show as many messages as possible while keeping them up-to-date.</p></body></html>"))
        self.isSticky.setToolTip(_translate("MainWindow", "<html><head/><body><p>Messages designated as Sticky will not get overwritten if the number of messages posted exceeds the message limit.</p></body></html>"))
        self.isSticky.setText(_translate("MainWindow", "Sticky"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabRawText), _translate("MainWindow", "Raw Text"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabRawText), _translate("MainWindow", "<html><head/><body><p>Produces scrolling text to display on your marquee.</p></body></html>"))
        self.btnTwitterStream.setToolTip(_translate("MainWindow", "<html><head/><body><p>Starts (or stops) the process that feeds real-time Tweets into the &quot;Raw Text&quot; widget</p></body></html>"))
        self.btnTwitterStream.setText(_translate("MainWindow", "Start"))
        self.lblTwitter.setText(_translate("MainWindow", "Enter a Twitter hashtag, handle, or a word or phrase in the box below.  Tweets will be displayed!"))
        self.lblTwitterAuth.setText(_translate("MainWindow", "Twitter API v1.1 requires applications to be signed in with OAuth 1.0a.  Fill out the four fields below.  If you do not have this information, login to dev.twitter.com and create an Application."))
        self.lblTwitterConsumerKey.setText(_translate("MainWindow", "Consumer Key"))
        self.lblTwitterTokenSecret.setText(_translate("MainWindow", "Access Token Secret"))
        self.lblTwitterTokenKey.setText(_translate("MainWindow", "Access Token Key"))
        self.lblTwitterConsumerSecret.setText(_translate("MainWindow", "Consumer Secret"))
        self.txtTwitterConsumerKey.setToolTip(_translate("MainWindow", "<html><head/><body><p>&quot;API key&quot; from your Twitter Devloper account page for your LEDgoes application</p></body></html>"))
        self.txtTwitterConsumerSecret.setToolTip(_translate("MainWindow", "<html><head/><body><p>&quot;API secret&quot; from your Twitter Devloper account page for your LEDgoes application</p></body></html>"))
        self.txtTwitterTokenKey.setToolTip(_translate("MainWindow", "<html><head/><body><p>&quot;Access token&quot; from your Twitter Devloper account page for your LEDgoes application</p></body></html>"))
        self.txtTwitterTokenSecret.setToolTip(_translate("MainWindow", "<html><head/><body><p>&quot;Access token secret&quot; from your Twitter Devloper account page for your LEDgoes application</p></body></html>"))
        self.btnTwitterAuth.setToolTip(_translate("MainWindow", "<html><head/><body><p>Signs you in to the Twitter API with the credentials you provided above</p></body></html>"))
        self.btnTwitterAuth.setText(_translate("MainWindow", "Authenticate"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTwitter), _translate("MainWindow", "Twitter Feed"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabTwitter), _translate("MainWindow", "<html><head/><body><p>Shows a live Twitter feed on your marquee.  Interfaces with the Raw Text widget.</p></body></html>"))
        self.lblGIFPath.setText(_translate("MainWindow", "Path to GIF Image:"))
        self.txtGIFPath.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">C:\\Users\\Stephen\\Videos\\LEDgoes_anim.gif</span></p></body></html>"))
        self.btnAnim.setToolTip(_translate("MainWindow", "<html><head/><body><p>Displays the animation on the marquee.</p></body></html>"))
        self.btnAnim.setText(_translate("MainWindow", "Send"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabAnimation), _translate("MainWindow", "Animation"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabAnimation), _translate("MainWindow", "<html><head/><body><p>Displays the animation of your choice on the marquee.</p></body></html>"))
        self.lblFirmwareDescription.setText(_translate("MainWindow", "Send commands to your boards in order to exert finer control over them."))
        self.lblTargetBoard.setText(_translate("MainWindow", "Desired ID:"))
        self.btnAllBoards.setToolTip(_translate("MainWindow", "<html><head/><body><p>Perform the desired action on all boards.</p></body></html>"))
        self.btnAllBoards.setText(_translate("MainWindow", "All"))
        self.lblSrcBoard.setText(_translate("MainWindow", "On:"))
        self.btnExecFwOp.setToolTip(_translate("MainWindow", "<html><head/><body><p>Enacts the change or saves the desired data to the specified chip.</p></body></html>"))
        self.btnExecFwOp.setText(_translate("MainWindow", "Go!"))
        self.btnEraseSettings.setToolTip(_translate("MainWindow", "<html><head/><body><p>Erases the specified data from the specified chip.</p></body></html>"))
        self.btnEraseSettings.setText(_translate("MainWindow", "Erase"))
        self.lblFWU.setText(_translate("MainWindow", "Update the firmware on your boards here."))
        self.lblFWUCOMPort.setText(_translate("MainWindow", "Port:"))
        self.label_4.setText(_translate("MainWindow", "avrdude command:"))
        self.label_3.setText(_translate("MainWindow", "Path to avrdude:"))
        self.lblFWUProgrammer.setText(_translate("MainWindow", "Programmer:"))
        self.label_2.setText(_translate("MainWindow", "Path to .HEX file:"))
        self.btnFindHexFile.setText(_translate("MainWindow", "..."))
        self.btnFindAvrdude.setText(_translate("MainWindow", "..."))
        self.lblFwOpHelp.setText(_translate("MainWindow", "Select a firmware operation from the list at left."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabFirmware), _translate("MainWindow", "Firmware"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabFirmware), _translate("MainWindow", "<html><head/><body><p>Operations to interact with each board for fine-tuning and troubleshooting</p></body></html>"))
        self.lblComingSoon3.setText(_translate("MainWindow", "Coming Soon"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabSimulator), _translate("MainWindow", "Simulator"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabSimulator), _translate("MainWindow", "<html><head/><body><p>See what the matrix will look like with your current settings</p></body></html>"))
        self.lblBaudRateInstrs.setText(_translate("MainWindow", "For a scrolling effect to look good, the serial port must run at a baud rate such that the LED matrix can refresh at least 25-30 times per second."))
        self.lblBaudRateNumPanels.setText(_translate("MainWindow", "Total number of panels in your matrix:"))
        self.label_5.setText(_translate("MainWindow", "columns per second"))
        self.lblBaudRateScrollRate.setText(_translate("MainWindow", "Desired scroll rate:"))
        self.lblBaudRateLabel.setText(_translate("MainWindow", "Set your Speed (bps) to:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabBaudRate), _translate("MainWindow", "Baud Rate"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tabBaudRate), _translate("MainWindow", "<html><head/><body><p>Finds the minimum baud rate (bps) in order to get a decent scroll rate</p></body></html>"))
        self.groupMarqueeProps.setTitle(_translate("MainWindow", "Marquee Properties"))
        self.lblDisplayRows.setText(_translate("MainWindow", "Rows:"))
        self.chkMultiplexed.setText(_translate("MainWindow", "Multiplexed"))
        self.lblPanelsPerRow.setText(_translate("MainWindow", "Panels Per Row:"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p>Update Delay (ms):</p></body></html>"))
        self.spinPanelsPerRow.setToolTip(_translate("MainWindow", "<html><head/><body><p>Specify how many panels exist in each row of your marquee here.</p></body></html>"))
        self.spinUpdateDelay.setToolTip(_translate("MainWindow", "<html><head/><body><p>Change this value to adjust the scroll rate of the marquee.</p></body></html>"))
        self.btnCustomLayout.setText(_translate("MainWindow", "Custom Layout..."))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionAbout_LEDgoes_PC_Interface.setText(_translate("MainWindow", "About BriteBlox PC Interface..."))
        self.actionUSB_Device_Selection.setText(_translate("MainWindow", "Show Only BriteBlox Communicators"))
        self.actionDumb_Enumeration.setText(_translate("MainWindow", "Dumb Enumeration"))
        self.actionRefresh_COM_Ports.setText(_translate("MainWindow", "Refresh COM Ports"))

